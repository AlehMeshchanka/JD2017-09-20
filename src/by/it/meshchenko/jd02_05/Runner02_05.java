package by.it.meshchenko.jd02_05;

import java.io.IOException;

public class Runner02_05 {
        public static void main(String[] args) throws IOException {
            // A.
            // Создать программу, которая может приветствовать пользователя на трех языках: английском, русском, белорусском. Требуемый язык и страна должны сообщаться программе в качестве входных параметров. Если входные параметры отсутствуют, программа должна выдавать сообщение на английском.
//В приветствии должно также быть Ваше имя.
            // B.
            // Выводилась текущая дата в том же языковом стандарте, что и приветствие.
            // C.
            //Язык можно было переключать с клавиатуры командами rube en.
//Ресурсы нужно создать сначала как текстовые файлы в формате utf-8 и получить из них файлы .properties утилитой native2ascii. Приведите использованные при этом командыв текстовомфайлекоманды.txt.
                    //Опционально. Напишите программу на java, которая автоматически генерирует файлы .propertiesиз текстовых файлов так же как это делает native2ascii.





            //  -Создайте матрицу 4 на 4 из целых случайных чисел от -15 до 15.
            //  -Выведите матрицу на консоль и в текстовый файл matrix.txt,
            // расположенный в папке заданияJD01_15. При выводе для каждого числа
            // рекомендуется предусмотреть для него три знакоместа, а между
            // числами –один пробел. Итого: матрица займет 4 строки по 16 символов.
            System.out.println("A.  **************************");
            //TaskA.example1();

        /* B.
              -Программа должна прочитать свой собственный текст в переменную типа StringBuilder.
              -Из прочитанного текста программы необходимоудалить все возможные виды комментариев.
              -Результат необходимо вывести с номерами строк в двухзначном формате на консоль
            и в файл с тем же местоположением и именем, но с расширением txt.*/
            System.out.println("B.  **************************");
            //TaskB.example1();

            // C.
            // Реализовать на java приложение-аналог командной строки Windows.
            // Приложение должно использовать класс File и поддерживать две команды:
            //  -команду cd -смена каталога (посмотрите пример: Win+R→cmd→cd \→dir).
            //  -команду dir-вывод каталога, формат вывода -аналогичный формату Windows.
            //  -Стартовым каталогом при запуске приложения должна быть папка нашего проекта.
            System.out.println("C.  **************************");
            //TaskC.example1();
        }
}
