package by.it.meshchenko.jd02_03;

public class Runner02_03 {
    public static void main(String[] args) {

        // В данном классе (Runner02_03) выполнены задания по темам:
        // 'Практика по потокам' - JD02_03/пз.02
        // Проект реализован на основе проекта 'jd02_01'
        // Дополнения указаны в пунктах 10 - 13

        //      Программа моделирующая поток покупателей в магазине
        // 1. - Каждую секунду в магазин приходят от 0 до 5 ('чтобы увидеть работу 5-ти касс')
        //          новых покупателейв течение двух минут (120сек).
        // 2. - Число покупателей плавно меняется:
        //          первые 30 сек в минуте - N <= t+10,
        //          вторые 30 сек в минуте -  N <= 40+(30-t),
        //              где t - текущая секунда.
        // 3. - Каждый покупатель реализует интерфейс IBuyer
        //          public interface IBuyer {
        //              void enterToMarket(); //вошел в магазин (мгновенно)
        //              void chooseGoods(); //выбрал товар (от 0,5 до 2 секунд)
        //              void goToQueue(); // встал в очередь на кассу
        //              void goToOut(); //отправился на выход(мгновенно)
        //          }
        //  4. - Каждый покупатель реализовал интерфейс IUseBasket
        //          public interface IUseBasket {
        //              void takeBasket(); //взял корзину  - 0,1..0,2 сек
        //              void putGoodsToBasket(); //положил выбранный товар в корзину  - 0,1..0,2 сек
        //          }
        //     - Время на каждую операцию от 0,1 до 0,2 секунд, итог операции выводиться в консоль.
        //     - У каждого покупателя с корзиной (Basket) собирается набор от 1..4 товаров
        //          (Goods) из фиксированного списка с ценой (рекомендуется hashmap,
        //          где товар –key,цена –value).
        //  5. - Покупатели отличаются, примерно каждый четвертый – пенсионер
        //          (boolean isPensioner). Все операции у пенсионера в среднем в 1,5 раза медленнее.
        //  6. - В магазине есть кассиры (класс Cashier).
        //     - Существует 5 экземпляров Cashier, работающих одновременно.
        //     - Покупатели, выбрав товар собираются в общей очереди в кассу.
        //     - Одновременно не может обрабатываться больше покупателей,
        //          чем имеется рабочих касс.
        //     - Время обслуживания одного покупателя от 2 до 5 секунд
        //  7. - Товары с ценой выводятся в консоль в процессе обслуживания.
        //     - Кассы без покупателей закрываются, а открывались автоматически по одной на
        //          каждые 5 покупателей в очереди (т.е. 6 или 10 человек –это 2 кассы,
        //          21 и более человек –5 касс).
        //  8. - Выводится общая сумма чека.
        //  9. - Работы магазина отображается в консоли в 10 столбцов:
        //          1. Time - Время
        //          2. # B - число покупателей в магащине,
        //          3. Cashier_1,
        //          4. Cashier_2,
        //          5. Cashier_3,
        //          6. Cashier_4,
        //          7. Cashier_5
        //          8. Queue - размер очереди в кассу
        //          9. TotalSumma - выручка магазина
        //         10. Buyer State - действия покупателей
        //      - Чеки отдельных покупателей не разрываются строками из других потоков.
        //      - Коллекция покупателей базируется на классе Buyer
        //      - Пенсионеры  обслуживаются вне очереди (но среди них есть очередь).

        //  10. Кассиры (класс Cashier) запускаются как пул потоков.
        //  11. В зале не может выбирать товар больше, чем 20 покупателей (семафор).
        //  12. В магазине всего 30 корзин. Если покупателю не хватило корзины он ее ожидает на входе.
        //  13. Использован пакет java.util.concurrent, что позволило использовать
        //          потокобезопасные блоки.
        Dispatcher.run();
    }
}
